{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "node.js REST API",
    "description": "Manages Products and Orders, supports authentication",
    "license": {
      "name": "SuperJB",
      "url": "https://john-b.info/"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for Users"
    },
    {
      "name": "Products",
      "description": "API for Products"
    },
    {
      "name": "Orders",
      "description": "API for Orders"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [ "Users" ],
        "summary": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/UserBody"
            }
          }
        ],"produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/UserCreated"
            }
          }
        }
      } 
    },
    "/users/login": {
      "post": {
        "tags": [ "Users" ],
        "summary": "Logs existing users into the system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Email and Password of existing user",
            "schema": {
              "$ref": "#/definitions/UserBody"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Existing user is authenticated",
            "schema": {
              "$ref": "#/definitions/AuthenticatedUser"
            }
          }
        }
      } 
    },
    "/users": {
      "get": {
        "tags": [ "Users" ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id of user that we want to use",
          "type": "integer"
        }
      ],
      "delete": {
        "summary": "Delete user with given Id",
        "tags": [ "Users" ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserBody": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "description": "encrypted using jwt"
        }
      }
    },
    "UserCreated": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "success message"
        }
      }
    },
    "AuthenticatedUser": {
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "User": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "description": "encrypted using jwt"
        },
        "_id": {
          "type": "integer",
          "uniqueItems": true
        }
      }
    },
	"Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}